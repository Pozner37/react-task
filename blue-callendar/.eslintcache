[{"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\index.js":"1","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\serviceWorker.js":"2","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\app\\store.ts":"3","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\App.js":"4","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\EventSlice.ts":"5","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\TaskSlice.ts":"6","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\sideBar\\sideBar.tsx":"7","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\TaskReader.ts":"8","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\EventReader.ts":"9","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\CalendarTask.ts":"10","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\CalendarUrgentTask.ts":"11","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\CalendarCompletedTask.ts":"12","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\CalendarEvent.ts":"13","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\generalTable.tsx":"14","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\calendarTable.tsx":"15","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\assets\\classes.ts":"16","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\assets\\SimpleDate.ts":"17","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\generalTableRow.tsx":"18","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\eventOther.tsx":"19","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\eventCollapseBody.tsx":"20","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\calendarTableHead.tsx":"21","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskTypeIcon.tsx":"22","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskPriorityIcon.tsx":"23","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskOther.tsx":"24","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskCollapseBody.tsx":"25","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\editModal\\taskModalBody.tsx":"26","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\editModal\\eventModalBody.tsx":"27","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\quickFilters\\filterBar.tsx":"28","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\createItemBar\\createButton.tsx":"29","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\editModal\\editModal.tsx":"30","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\createItemBar\\createItemBar.tsx":"31"},{"size":644,"mtime":1612772615609,"results":"32","hashOfConfig":"33"},{"size":5141,"mtime":1612772615609,"results":"34","hashOfConfig":"33"},{"size":571,"mtime":1613900385375,"results":"35","hashOfConfig":"33"},{"size":546,"mtime":1614177741132,"results":"36","hashOfConfig":"33"},{"size":1354,"mtime":1613898092132,"results":"37","hashOfConfig":"33"},{"size":802,"mtime":1613033545676,"results":"38","hashOfConfig":"33"},{"size":470,"mtime":1612960360013,"results":"39","hashOfConfig":"33"},{"size":1258,"mtime":1614150269291,"results":"40","hashOfConfig":"33"},{"size":765,"mtime":1613030915986,"results":"41","hashOfConfig":"33"},{"size":1175,"mtime":1612772615593,"results":"42","hashOfConfig":"33"},{"size":642,"mtime":1614151757532,"results":"43","hashOfConfig":"33"},{"size":1017,"mtime":1612950225742,"results":"44","hashOfConfig":"33"},{"size":1990,"mtime":1613379145845,"results":"45","hashOfConfig":"33"},{"size":2012,"mtime":1614068684962,"results":"46","hashOfConfig":"33"},{"size":552,"mtime":1612960359977,"results":"47","hashOfConfig":"33"},{"size":430,"mtime":1612950225664,"results":"48","hashOfConfig":"33"},{"size":454,"mtime":1613396474455,"results":"49","hashOfConfig":"33"},{"size":3776,"mtime":1614177694209,"results":"50","hashOfConfig":"33"},{"size":801,"mtime":1612959425958,"results":"51","hashOfConfig":"33"},{"size":1502,"mtime":1613375078067,"results":"52","hashOfConfig":"33"},{"size":632,"mtime":1613373611260,"results":"53","hashOfConfig":"33"},{"size":550,"mtime":1612963067058,"results":"54","hashOfConfig":"33"},{"size":474,"mtime":1612969142279,"results":"55","hashOfConfig":"33"},{"size":1542,"mtime":1614150568547,"results":"56","hashOfConfig":"33"},{"size":599,"mtime":1613374742699,"results":"57","hashOfConfig":"33"},{"size":4378,"mtime":1614174415327,"results":"58","hashOfConfig":"33"},{"size":7414,"mtime":1614163437202,"results":"59","hashOfConfig":"33"},{"size":315,"mtime":1614066448948,"results":"60","hashOfConfig":"33"},{"size":306,"mtime":1614177924505,"results":"61","hashOfConfig":"33"},{"size":752,"mtime":1614177694256,"results":"62","hashOfConfig":"33"},{"size":1332,"mtime":1614177924489,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"8b5t96",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\index.js",[],["134","135"],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\serviceWorker.js",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\app\\store.ts",[],["136","137"],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\App.js",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\EventSlice.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\TaskSlice.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\sideBar\\sideBar.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\TaskReader.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\EventReader.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\CalendarTask.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\CalendarUrgentTask.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\CalendarCompletedTask.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\CalendarEvent.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\generalTable.tsx",["138"],"import React from 'react';\r\nimport CalendarTable from \"./calendarTable\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectEvents} from \"../event/EventSlice\";\r\nimport CalendarEvent from \"../event/CalendarEvent\";\r\nimport GeneralTableRow from \"./generalTableRow\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport EventOther from \"../event/eventOther\";\r\nimport EventCollapseBody from \"../event/eventCollapseBody\";\r\nimport {selectTasks} from \"../task/TaskSlice\";\r\nimport CalendarTask from \"../task/CalendarTask\";\r\nimport getTaskTypeIcon from \"../task/taskTypeIcon\";\r\nimport getTaskPriorityIcon from \"../task/taskPriorityIcon\";\r\nimport TaskOther from \"../task/taskOther\";\r\nimport TaskCollapseBody from \"../task/taskCollapseBody\";\r\n\r\nfunction GeneralTable(props: any) {\r\n    const head = ['Type', 'Priority', 'Title', 'Other', 'Actions'];\r\n    const events = useSelector(selectEvents).Events;\r\n    const tasks = useSelector(selectTasks).Tasks;\r\n    const taskFilter = props.taskFilter;\r\n    const taskRows = () => tasks.map((task: CalendarTask) => (\r\n        <GeneralTableRow key={task.getId()} item={task} typeIcon={getTaskTypeIcon(task)}\r\n                         priorityIcon={getTaskPriorityIcon(task)}\r\n                         other={<TaskOther task={task}/>}\r\n                         collapseBody={<TaskCollapseBody task={task}/>}/>)\r\n    );\r\n\r\n    const eventRows = () => events.map((event: CalendarEvent) => (\r\n        <GeneralTableRow key={event.getId()} item={event} typeIcon={<NotificationsIcon/>} priorityIcon={<RemoveIcon/>}\r\n                         other={<EventOther event={event}/>}\r\n                         collapseBody={<EventCollapseBody event={event}/>}/>));\r\n\r\n    const rows = () => {\r\n        return (<>\r\n            {taskRows()}\r\n            {eventRows()}\r\n        </>);\r\n    };\r\n\r\n    return (\r\n        <CalendarTable head={head} body={rows()}></CalendarTable>\r\n    );\r\n}\r\n\r\nexport default GeneralTable;","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\calendarTable.tsx",["139"],"import React from 'react';\r\nimport {Paper, Table, TableContainer} from \"@material-ui/core\";\r\nimport useStyles from \"../../assets/classes\";\r\nimport CalendarTableHead from \"./calendarTableHead\";\r\n\r\nfunction CalendarTable(props: any) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <TableContainer component={Paper} className={classes.table}>\r\n            <Table>\r\n                <CalendarTableHead head={props.head}/>\r\n                {props.body}\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default CalendarTable;","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\assets\\classes.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\assets\\SimpleDate.ts",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\generalTableRow.tsx",["140"],"import React from 'react';\r\nimport {\r\n    Box,\r\n    Collapse,\r\n    IconButton,\r\n    Table, TableBody,\r\n    TableCell,\r\n    TableRow, Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport store from \"../../app/store\";\r\nimport {removeEvent} from '../event/EventSlice';\r\nimport {removeTask} from '../task/TaskSlice';\r\nimport CalendarEvent from \"../event/CalendarEvent\";\r\nimport CalendarTask from \"../task/CalendarTask\";\r\nimport EditEventModal from \"../editModal/editEventModal\";\r\nimport EventModalBody from \"../editModal/eventModalBody\";\r\nimport TaskModalBody from \"../editModal/taskModalBody\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\ninterface IGeneralTableRowPropsInterface {\r\n\r\n}\r\n\r\nfunction GeneralTableRow(props: any) {\r\n    const item = props.item;\r\n    const [open, setOpen] = React.useState(false);\r\n    const removeItem = () => {\r\n        if (item instanceof CalendarEvent){\r\n            store.dispatch(removeEvent(item));\r\n        } else if (item instanceof CalendarTask){\r\n            store.dispatch(removeTask(item));\r\n        }\r\n    };\r\n    const modalBody = () => {\r\n        if (item instanceof CalendarEvent){\r\n            return <EventModalBody event={item}/>;\r\n        } else if (item instanceof CalendarTask){\r\n            return <TaskModalBody task={item}/>;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <TableBody>\r\n                <TableRow>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                        {props.typeIcon}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                        {props.priorityIcon}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                        <Typography>{item.getTitle()}</Typography>\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                        <Table size=\"small\">\r\n                            {props.other}\r\n                        </Table>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                        <EditEventModal body={modalBody()} icon={<EditIcon/>}></EditEventModal>\r\n                        <Tooltip title=\"Delete\" arrow>\r\n                            <IconButton onClick={() => removeItem()}>\r\n                                <DeleteIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"More Info\" arrow>\r\n                            <IconButton aria-label=\"expand row\" onClick={() => setOpen(!open)}>\r\n                                {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                    <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>\r\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                            <Box margin={1}>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        {props.collapseBody}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Collapse>\r\n                    </TableCell>\r\n                </TableRow>\r\n            </TableBody>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GeneralTableRow;","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\eventOther.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\event\\eventCollapseBody.tsx",["141"],"import React from 'react';\r\nimport {Avatar, styled, TableBody, TableCell, TableRow, Typography} from \"@material-ui/core\";\r\nimport useStyles from \"../../assets/classes\";\r\n\r\nfunction EventCollapseBody(props: any) {\r\n    const event = props.event;\r\n    const classes = useStyles();\r\n    const ColoredAvatar = styled(Avatar)({\r\n        backgroundColor: event.getColor()\r\n    });\r\n    const getInvitedGuests = () => {\r\n        if(event.getInvitedGuests().length === 0) {\r\n            return \"[None   ]\";\r\n        } else {\r\n            return event.getInvitedGuests();\r\n        }\r\n    }\r\n    return (\r\n            <TableRow>\r\n                <TableCell className={classes.borderlessTableCell}>\r\n                    <Typography>Description:&nbsp;{event.getDescription()}</Typography>\r\n                </TableCell>\r\n                <TableCell className={classes.sideBorderTableCell}>\r\n                    <Typography>Color:</Typography>\r\n                    <ColoredAvatar> </ColoredAvatar>\r\n                </TableCell>\r\n                <TableCell className={classes.sideBorderTableCell}>\r\n                    <Typography>Invited Guests:&nbsp;{getInvitedGuests()}</Typography>\r\n                </TableCell>\r\n                <TableCell className={classes.borderlessTableCell}>\r\n                    <Typography>Notification\r\n                        Time:&nbsp;{event.getSimpleNotificationTime()}</Typography>\r\n                </TableCell>\r\n            </TableRow>\r\n    );\r\n}\r\n\r\nexport default EventCollapseBody;","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\table\\calendarTableHead.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskTypeIcon.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskPriorityIcon.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskOther.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\task\\taskCollapseBody.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\editModal\\taskModalBody.tsx",["142","143","144","145","146","147","148","149","150"],"import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    TextField,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport CalendarUrgentTask from \"../task/CalendarUrgentTask\";\r\nimport CalendarCompletedTask from \"../task/CalendarCompletedTask\";\r\n\r\nfunction TaskModalBody(props: any) {\r\n    const dispatch = useDispatch();\r\n    const task = props.task;\r\n    const [title, setTitle] = useState(task.getTitle());\r\n    const [description, setDescription] = useState(task.getDescription());\r\n    const [estimatedTime, setEstimatedTime] = useState(task.getEstimatedTime());\r\n    const [status, setStatus] = useState(task.getStatus());\r\n    const [priority, setPriority] = useState(task.getPriority());\r\n\r\n    const updateTitle = (event: any) => {\r\n        setTitle(event.target.value);\r\n    };\r\n    const updateDescription = (event: any) => {\r\n        setDescription(event.target.value);\r\n    };\r\n    const updateEstimatedTime = (event: any) => {\r\n        setEstimatedTime(event.target.value);\r\n    };\r\n    const updateStatus = (event: any) => {\r\n        setStatus(event.target.value);\r\n    };\r\n    const updatePriority = (event: any) => {\r\n        setPriority(event.target.value);\r\n    };\r\n\r\n    const submitForm = () => {\r\n        // const updatedTask = new CalendarTask(task.getId(),title,description);\r\n        // dispatch(updateEvent(updatedEvent));\r\n    };\r\n\r\n    const [untilDate, setUntilDate] = useState(task.getUntilDate());\r\n    const updateUntilDate = (event: any) => {\r\n        setUntilDate(event.target.value);\r\n    };\r\n\r\n    const urgentTask = () => {\r\n        if (task instanceof CalendarUrgentTask) {\r\n            return (\r\n                <TableRow>\r\n                    <TableCell><Typography>Until Date:</Typography></TableCell>\r\n                    <TableCell>\r\n                        <TextField defaultValue={task.getUntilDate()} onChange={updateUntilDate} multiline/>\r\n                    </TableCell>\r\n                </TableRow>);\r\n        }\r\n    };\r\n    const completedTask = () => {\r\n        if (task instanceof CalendarCompletedTask) {\r\n            return (\r\n                <TableRow>\r\n                    <TableCell><Typography>Until Date:</Typography></TableCell>\r\n                    <TableCell>\r\n                        <TextField defaultValue={task.getEstimatedTime()} onChange={updateDescription} multiline/>\r\n                    </TableCell>\r\n                </TableRow>);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Title:</Typography></TableCell>\r\n                                <TableCell>\r\n                                    <TextField defaultValue={task.getTitle()} onChange={updateTitle} multiline/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Description:</Typography></TableCell>\r\n                                <TableCell>\r\n                                    <TextField defaultValue={task.getDescription()} onChange={updateDescription}\r\n                                               multiline/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell><Typography>Estimated Time:</Typography></TableCell>\r\n                                <TableCell>\r\n                                    <TextField defaultValue={task.getEstimatedTime()} onChange={updateEstimatedTime}\r\n                                               multiline/>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            {urgentTask()}\r\n                            {completedTask()}\r\n                        </TableBody>\r\n                    </Table>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button onClick={submitForm}>Save</Button>\r\n                </CardActions>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaskModalBody;","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\editModal\\eventModalBody.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\quickFilters\\filterBar.tsx",["151"],"import React from 'react';\r\nimport {Button, Typography} from \"@material-ui/core\";\r\n\r\nfunction FilterBar() {\r\n    const tasksOnly = () => {\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Typography>Quick Filters: </Typography>\r\n            <Button>Test</Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterBar;","C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\createItemBar\\createButton.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\editModal\\editModal.tsx",[],"C:\\Users\\idopo\\WebstormProjects\\react-task\\blue-callendar\\src\\features\\createItemBar\\createItemBar.tsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":22,"column":11,"nodeType":"158","messageId":"159","endLine":22,"endColumn":21},{"ruleId":"156","severity":1,"message":"160","line":2,"column":9,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"156","severity":1,"message":"161","line":24,"column":11,"nodeType":"158","messageId":"159","endLine":24,"endColumn":41},{"ruleId":"156","severity":1,"message":"162","line":2,"column":25,"nodeType":"158","messageId":"159","endLine":2,"endColumn":34},{"ruleId":"156","severity":1,"message":"163","line":19,"column":11,"nodeType":"158","messageId":"159","endLine":19,"endColumn":19},{"ruleId":"156","severity":1,"message":"164","line":21,"column":12,"nodeType":"158","messageId":"159","endLine":21,"endColumn":17},{"ruleId":"156","severity":1,"message":"165","line":22,"column":12,"nodeType":"158","messageId":"159","endLine":22,"endColumn":23},{"ruleId":"156","severity":1,"message":"166","line":23,"column":12,"nodeType":"158","messageId":"159","endLine":23,"endColumn":25},{"ruleId":"156","severity":1,"message":"167","line":24,"column":12,"nodeType":"158","messageId":"159","endLine":24,"endColumn":18},{"ruleId":"156","severity":1,"message":"168","line":25,"column":12,"nodeType":"158","messageId":"159","endLine":25,"endColumn":20},{"ruleId":"156","severity":1,"message":"169","line":36,"column":11,"nodeType":"158","messageId":"159","endLine":36,"endColumn":23},{"ruleId":"156","severity":1,"message":"170","line":39,"column":11,"nodeType":"158","messageId":"159","endLine":39,"endColumn":25},{"ruleId":"156","severity":1,"message":"171","line":48,"column":12,"nodeType":"158","messageId":"159","endLine":48,"endColumn":21},{"ruleId":"156","severity":1,"message":"172","line":5,"column":11,"nodeType":"158","messageId":"159","endLine":5,"endColumn":20},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"@typescript-eslint/no-unused-vars","'taskFilter' is assigned a value but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'IGeneralTableRowPropsInterface' is defined but never used.","'TableBody' is defined but never used.","'dispatch' is assigned a value but never used.","'title' is assigned a value but never used.","'description' is assigned a value but never used.","'estimatedTime' is assigned a value but never used.","'status' is assigned a value but never used.","'priority' is assigned a value but never used.","'updateStatus' is assigned a value but never used.","'updatePriority' is assigned a value but never used.","'untilDate' is assigned a value but never used.","'tasksOnly' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]